# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

permissions:
  contents: read

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    # Pre-pull Postgres so Testcontainers sees it locally
    - name: Pre-pull Postgres image
      run: |
         docker pull postgres:latest
    - name: Build with Maven
      run: mvn -B verify --file pom.xml -DskipDependencyCheck=true

    - name: Upload JUnit test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: junit-results
        path: |
          **/target/surefire-reports/
          **/target/failsafe-reports/
        retention-days: 2

    - name: Test Summary · Unit
      if: always()
      uses: test-summary/action@v2
      with:
        paths: '**/target/surefire-reports/TEST-*.xml'
      env:
        NODE_OPTIONS: --max-old-space-size=4096

    - name: Test Summary · Integration
      if: always()
      uses: test-summary/action@v2
      with:
        paths: '**/target/failsafe-reports/TEST-*.xml'
      env:
        NODE_OPTIONS: --max-old-space-size=4096

    #- name: Report JUnit Test Results
    #  if: always()
    #  uses: dorny/test-reporter@v1
    #  with:
    #    name: JUnit Tests
    #    path:  '**/target/surefire-reports/*.xml'
    #    reporter: java-junit
